{
    "files.associations": {
        "*.rb": "ruby",
        "*.py": "python",
        "*.cpp": "cpp",
        "__bit_reference": "cpp",
        "__config": "cpp",
        "__locale": "cpp",
        "__threading_support": "cpp",
        "__verbose_abort": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "initializer_list": "cpp",
        "ios": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "locale": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "ratio": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "tuple": "cpp",
        "typeinfo": "cpp",
        "unordered_map": "cpp",
        "variant": "cpp",
        "vector": "cpp",
        "ranges": "cpp",
        "__hash_table": "cpp",
        "__node_handle": "cpp",
        "__split_buffer": "cpp",
        "__tree": "cpp",
        "any": "cpp",
        "array": "cpp",
        "barrier": "cpp",
        "cfenv": "cpp",
        "charconv": "cpp",
        "cinttypes": "cpp",
        "codecvt": "cpp",
        "complex": "cpp",
        "csetjmp": "cpp",
        "csignal": "cpp",
        "cuchar": "cpp",
        "deque": "cpp",
        "execution": "cpp",
        "forward_list": "cpp",
        "fstream": "cpp",
        "future": "cpp",
        "iomanip": "cpp",
        "latch": "cpp",
        "list": "cpp",
        "map": "cpp",
        "numbers": "cpp",
        "optional": "cpp",
        "queue": "cpp",
        "regex": "cpp",
        "scoped_allocator": "cpp",
        "semaphore": "cpp",
        "set": "cpp",
        "shared_mutex": "cpp",
        "source_location": "cpp",
        "span": "cpp",
        "sstream": "cpp",
        "stack": "cpp",
        "typeindex": "cpp",
        "unordered_set": "cpp",
        "valarray": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "coroutine": "cpp",
        "expected": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "numeric": "cpp",
        "random": "cpp",
        "type_traits": "cpp",
        "utility": "cpp"
    },
    "vim.autoSwitchInputMethod.enable": false,
    "editor.lineNumbers": "relative",
    "cSpell.words": [
        "ENDC",
        "imie",
        "Parens",
        "Struct"
    ],
    "search.useIgnoreFiles": false,
    "editor.formatOnSave": true,
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/main_js.dSYM": true,
        "**/main.dSYM": true,
        "**/node_modules": true,
        "**/.vscode/launch.dSYM": true,
        "**/.build/": true,
        "**/.venv/": true,
        "**/__pycache__": true,
        "**/xcode/": true,
        "**/.logs/": true
    },
    "search.exclude": {
        "**/bower_components": true,
        "**/*.code-search": true,
        "**/main_js.dSYM": true,
        "**/main.dSYM": true,
        "**/node_modules": true,
        "**/.vscode/launch.dSYM": true,
        "**/.build/": true,
        "**/.venv/": true,
        "**/__pycache__": true,
        "**/xcode/": true,
        "**/.logs/": true
    },
    "cmake.configureOnOpen": false,
    "editor.detectIndentation": false,
    "editor.formatOnPaste": true,
    "editor.autoIndent": "advanced",
    "C_Cpp.clang_format_style": "file:${workspaceFolder}/.clang-format",
    "C_Cpp.autocomplete": "default",
    "C_Cpp.codeAnalysis.runAutomatically": true,
    "pylint.enabled": true,
    "python.analysis.autoIndent": true,
    "autopep8.args": [
        "--max-line-length=160"
    ],
    "black-formatter.args": [
        "--line-length",
        "160"
    ],
    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": false,
        "comments": false,
        "strings": false
    },
    // Controls if suggestions should be accepted with "Enter" - in addition to "Tab". Helps to avoid ambiguity between inserting new lines and accepting suggestions.
    // "editor.acceptSuggestionOnEnter": "off",
    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 500,
    // Enable word based suggestions
    "editor.wordBasedSuggestions": "off",
    "editor.suggestOnTriggerCharacters": true,
    // "editor.autoClosingBrackets": "never"
}